// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BoardList
    Boards={
        Array [
            Board {
              "id": 1,
              "name": "board1",
              "tasklists": Array [],
            },
            Board {
              "id": 2,
              "name": "board2",
              "tasklists": Array [],
            },
          ]
    }
    getBoards={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="row"
>
        <div
                className=""
        >
                <withRouter(Connect(Card))
                        id={1}
                        name="board1"
                />
        </div>
        <div
                className=""
        >
                <withRouter(Connect(Card))
                        id={2}
                        name="board2"
                />
        </div>
        <Connect(CreateBoardContainer) />
</div>,
      "className": "container-fluid board-list",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          Array [
            <div
              className=""
>
              <withRouter(Connect(Card))
                            id={1}
                            name="board1"
              />
</div>,
            <div
              className=""
>
              <withRouter(Connect(Card))
                            id={2}
                            name="board2"
              />
</div>,
          ],
          <Connect(CreateBoardContainer) />,
        ],
        "className": "row",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "host",
          "props": Object {
            "children": <withRouter(Connect(Card))
              id={1}
              name="board1"
/>,
            "className": "",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "id": 1,
              "name": "board1",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "host",
          "props": Object {
            "children": <withRouter(Connect(Card))
              id={2}
              name="board2"
/>,
            "className": "",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "id": 2,
              "name": "board2",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="row"
>
          <div
                    className=""
          >
                    <withRouter(Connect(Card))
                              id={1}
                              name="board1"
                    />
          </div>
          <div
                    className=""
          >
                    <withRouter(Connect(Card))
                              id={2}
                              name="board2"
                    />
          </div>
          <Connect(CreateBoardContainer) />
</div>,
        "className": "container-fluid board-list",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            Array [
              <div
                className=""
>
                <withRouter(Connect(Card))
                                id={1}
                                name="board1"
                />
</div>,
              <div
                className=""
>
                <withRouter(Connect(Card))
                                id={2}
                                name="board2"
                />
</div>,
            ],
            <Connect(CreateBoardContainer) />,
          ],
          "className": "row",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "1",
            "nodeType": "host",
            "props": Object {
              "children": <withRouter(Connect(Card))
                id={1}
                name="board1"
/>,
              "className": "",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "id": 1,
                "name": "board1",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": "2",
            "nodeType": "host",
            "props": Object {
              "children": <withRouter(Connect(Card))
                id={2}
                name="board2"
/>,
              "className": "",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "id": 2,
                "name": "board2",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
